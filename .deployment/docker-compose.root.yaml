name: root

volumes:
  letsencrypt:
    external: true
  pgadmin:
    external: true
  prometheus:
    external: true
  grafana:
    external: true

networks:
  socket:
  monitoring:
  proxy:
    external: true

services:
  traefik:
    container_name: traefik
    image: traefik:v3.1
    environment:
      - CF_DNS_API_TOKEN=$CF_DNS_API_TOKEN
    command:
      - --accesslog
      - --log.level=INFO
      - --api.dashboard=true
      - --providers.docker
      - --providers.docker.network=proxy
      - --providers.docker.endpoint=tcp://dockersocket:2375
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesresolvers.letsencrypt.acme.email=$ACME_EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.certificatesduration=2160
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=$CNAME
      - --entrypoints.websecure.http.tls.domains[0].sans=*.$CNAME
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --serverstransport.insecureskipverify=true
      - --global.checknewversion=false
      - --global.sendanonymoususage=false
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.dashboard-auth.basicauth.users=$DASHBOARD_AUTH
      - traefik.http.routers.traefik.rule=Host(`traefik.$CNAME`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=dashboard-auth
    ports:
      - 80:80
      - 443:443
    volumes:
      - letsencrypt:/letsencrypt
    networks:
      - socket
      - proxy
    restart: unless-stopped

  dockersocket:
    privileged: true
    container_name: dockersocket
    image: tecnativa/docker-socket-proxy:0.3
    environment:
      - CONTAINERS=1
      - POST=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - socket
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.12
    environment:
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_LISTEN_PORT=8000
    volumes:
      - pgadmin:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.$CNAME`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.services.pgadmin.loadbalancer.server.port=8000
    networks:
      - proxy
    restart: always

  nodeexporter:
    container_name: nodeexporter
    image: prom/node-exporter:v1.8.2
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.54.1
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    volumes:
      - $ROOT_HOME/.prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - prometheus:/prometheus
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:11.2.2
    environment:
      - GF_SECURITY_ADMIN_USER=$GF_SECURITY_ADMIN_USER
      - GF_SECURITY_ADMIN_PASSWORD=$GF_SECURITY_ADMIN_PASSWORD
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.$CNAME`)
      - traefik.http.routers.grafana.entrypoints=websecure
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    volumes:
      - $ROOT_HOME/.datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yml:ro
    networks:
      - proxy
      - monitoring
    restart: unless-stopped
