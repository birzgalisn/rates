volumes:
  db_data:

networks:
  proxy:

services:
  db:
    image: postgres:16.4-alpine
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - proxy

  turbo:
    image: rates:turbo
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    volumes:
      - .:/app
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`$CNAME`)
      - traefik.http.routers.web.entrypoints=web
      - traefik.http.routers.web.service=web
      - traefik.http.services.web.loadbalancer.server.port=3000
      - traefik.http.routers.api.rule=Host(`api.$CNAME`)
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.routers.api.service=api
      - traefik.http.services.api.loadbalancer.server.port=4000
    networks:
      - proxy

  traefik:
    image: traefik:v3.1.2
    command:
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --providers.docker.network=proxy
      - --providers.docker.exposedbydefault=false
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.$CNAME`)
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.service=api@internal
    networks:
      proxy:
        aliases:
          - $CNAME
          - api.$CNAME
